amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.4 # odom expected noise in rotation from rotation
    alpha2: 0.3 # odom expected noise in rotation from translation
    alpha3: 0.2 # odom expected noise in translation from translation
    alpha4: 0.4 # odom expected noise in translation from rotation
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 10.0 #2.0
    laser_max_range: 30.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 3000 #2000
    min_particles: 1000 #500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel" #nav2_amcl::OmniMotionModel
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 0.5 #0.2
    update_min_a: 0.05
    update_min_d: 0.05
    z_hit: 0.98
    z_max: 0.05
    z_rand: 0.02 # X% chance a measurement is not based on the map provided
    z_short: 0.05
    scan_topic: scan

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    bt_loop_duration: 5
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    controller_frequency: 30.0
    goal_checker_plugins: ["goal_checker"]
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.5 #0.25
      yaw_goal_tolerance: 0.25
      stateful: True
    controller_plugins: ["FollowPath"]
    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      angular_dist_threshold: 0.5
      rotate_to_goal_heading: True
      forward_sampling_distance: 1.0 #0.5
      rotate_to_heading_angular_vel: 1.0 #1.8
      max_angular_accel: 3.2
      simulate_ahead_time: 1.5 #1.0

      primary_controller: teb_local_planner::TebLocalPlannerROS

      # Trajectory

      teb_autosize: 1.0
      dt_ref: 0.3
      dt_hysteresis: 0.1
      min_samples: 3
      max_samples: 1000
      global_plan_overwrite_orientation: False #True
      allow_init_with_backwards_motion: True #False
      global_plan_viapoint_sep: 0.1
      via_points_ordered: False
      max_global_plan_lookahead_dist: 5.0
      global_plan_prune_distance: 2.0 #1.0
      exact_arc_length: True #False
      # force_reinit_new_goal_dist: 2.0
      # force_reinit_new_goal_angular: 0.5
      feasibility_check_no_poses: 5 #5
      feasibility_check_lookahead_distance: -1.0
      publish_feedback: False
      control_look_ahead_poses: 1
      prevent_look_ahead_poses_near_goal: 15 #0

      # Robot

      max_vel_x: 0.5
      max_vel_x_backwards: 0.3
      max_vel_theta: 1.0
      acc_lim_x: 2.5
      acc_lim_theta: 3.2
      min_turning_radius: 1.6

      footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
        type: "polygon"
        vertices: "[[0.38, 0.33], [0.38, -0.33], [-0.38, -0.33], [-0.38, 0.33]]"

      # GoalTolerance
      xy_goal_tolerance: 0.5 #0.25
      yaw_goal_tolerance: 0.25
      free_goal_vel: False
      complete_global_plan: True
      # trans_stopped_vel: 0.1
      # theta_stopped_vel: 0.1

      # Obstacles

      min_obstacle_dist: 0.2
      inflation_dist: 0.6
      include_costmap_obstacles: True
      costmap_obstacles_behind_robot_dist: 1.0
      obstacle_poses_affected: 15

      dynamic_obstacle_inflation_dist: 0.6
      include_dynamic_obstacles: True

      costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
      costmap_converter_spin_thread: True
      costmap_converter_rate: 5

      # Optimization

      no_inner_iterations: 5
      no_outer_iterations: 4
      optimization_activate: True
      optimization_verbose: False
      penalty_epsilon: 0.1
      obstacle_cost_exponent: 4.0
      weight_max_vel_x: 1.0
      weight_max_vel_theta: 1.0
      weight_acc_lim_x: 1.0
      weight_acc_lim_theta: 1.0
      weight_kinematics_nh: 1000.0
      weight_kinematics_forward_drive: 4.0
      weight_kinematics_turning_radius: 3.0
      weight_optimaltime: 1.0 # must be > 0
      weight_shortest_path: 0.0
      weight_obstacle: 100.0
      weight_inflation: 0.2
      weight_dynamic_obstacle: 10.0 
      weight_dynamic_obstacle_inflation: 0.2
      weight_viapoint: 50.0
      weight_adapt_factor: 2.0

      # Homotopy Class Planner

      enable_homotopy_class_planning: True
      enable_multithreading: True
      simple_exploration: True #False
      max_number_classes: 5 #5
      selection_cost_hysteresis: 5.0 #1.0
      selection_prefer_initial_plan: 1.0 #0.95
      selection_obst_cost_scale: 1.0 #100.0
      selection_viapoint_cost_scale: 1.0
      selection_alternative_time_cost: False #False
      selection_dropping_probability: 0.0

      obstacle_keypoint_offset: 0.1
      obstacle_heading_threshold: 0.45
      roadmap_graph_no_samples: 15
      roadmap_graph_area_width: 5.0 #6
      roadmap_graph_area_length_scale: 1.0
      h_signature_prescaler: 0.5 #1.0
      h_signature_threshold: 0.1
      switching_blocking_period: 0.0

      viapoints_all_candidates: True
      visualize_hc_graph: False
      visualize_with_time_as_z_axis_scale: 0.0
      delete_detours_backwards: False #True
      length_start_orientation_vector: 0.4
      max_ratio_detours_duration_best_duration: 3.0

      # Recovery

      shrink_horizon_backup: True
      shrink_horizon_min_duration: 10.0
      oscillation_recovery: True
      oscillation_v_eps: 0.1
      oscillation_omega_eps: 0.1
      oscillation_recovery_min_duration: 10.0
      oscillation_filter_duration: 10.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 20.0 #10.0
      publish_frequency: 10.0 #5.0
      global_frame: odom
      robot_base_frame: base_footprint
      use_sim_time: True
      rolling_window: true
      width: 6
      height: 6
      resolution: 0.05
      footprint: "[ [0.38, 0.33], [0.38, -0.33], [-0.38, -0.33], [-0.38, 0.33] ]"
      footprint_padding: 0.1
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.3
        inflation_radius: 1.0
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan_marking scan_clearing
        scan_marking:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: False
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 4.0
          raytrace_min_range: 0.0
          obstacle_max_range: 4.0
          obstacle_min_range: 0.0
        scan_clearing:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: False
          data_type: "LaserScan"
          raytrace_max_range: 4.0
          raytrace_min_range: 0.0
          obstacle_max_range: 4.0
          obstacle_min_range: 0.0
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      transform_tolerance: 0.5 #0.2
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: True
      footprint: "[ [0.38, 0.33], [0.38, -0.33], [0.38, -0.33], [0.38, 0.33] ]"
      footprint_padding: 0.1
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.3
        inflation_radius: 1.0
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan_marking scan_clearing
        scan_marking:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: False
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 8.0 #3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0 #2.5
          obstacle_min_range: 0.0
        scan_clearing:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: False
          data_type: "LaserScan"
          raytrace_max_range: 8.0 #3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 8.0 #2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: True
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid" #nav2_navfn_planner/NavfnPlanner
      tolerance: 0.3
      minimum_turning_radius: 1.6
      allow_unknown: true
      change_penalty: 0.15 # For Hybrid nodes: penalty to apply if motion is changing directions, must be >= 0
      non_straight_penalty: 1.0 # For Hybrid nodes: penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 2.0 # For Hybrid nodes: penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true

smoother_server:
  ros__parameters:
    use_sim_time: True
    robot_base_frame: base_footprint
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins:
      ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_footprint
    transform_tolerance: 0.5 #0.2
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    # max_velocity: [0.26, 0.0, 1.0]
    # min_velocity: [-0.26, 0.0, -1.0]
    max_velocity: [0.60, 0.0, 1.0]
    min_velocity: [-0.60, 0.0, -1.0]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0